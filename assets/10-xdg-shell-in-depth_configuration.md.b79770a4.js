import{_ as s,c as n,o as a,d as l}from"./app.1dfb0975.js";const u=JSON.parse('{"title":"配置和生命周期","description":"","frontmatter":{},"headers":[{"level":2,"title":"XDG 顶层窗口的生命周期","slug":"xdg-顶层窗口的生命周期","link":"#xdg-顶层窗口的生命周期","children":[]},{"level":2,"title":"请求改变状态","slug":"请求改变状态","link":"#请求改变状态","children":[]}],"relativePath":"10-xdg-shell-in-depth/configuration.md","lastUpdated":1677168613000}'),p={name:"10-xdg-shell-in-depth/configuration.md"},o=l(`<h1 id="配置和生命周期" tabindex="-1">配置和生命周期 <a class="header-anchor" href="#配置和生命周期" aria-hidden="true">#</a></h1><p>先前，按我们的选择创建了一个固定尺寸的窗口：640x480。然而，混成器往往会对我们的窗口应假设什么样的尺寸有意见，而我们可能也想传达自己的偏好尺寸。未能这样做往往会导致非预期行为，比如你窗口的一部分被混成器裁切掉，而混成器试图告诉你让你的表面尺寸缩小。</p><p>混成器可以为应用程序提供额外的线索，了解其显示的上下文。它可以让你知道应用是否正处于最大化或者全屏状态，亦或其窗口边的一个或多个边缘正与其他窗口或显示器的边缘平铺、正处于焦点还是后台空闲状态，等等。由于 <code>wl_surface</code> 是用来在客户端和服务端之间原子化交流表面的变化，<code>xdg_surface</code> 提供接口提供了一下两个消息，供混成器建议一些变化和客户端确认：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ack_configure</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">serial</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">configure</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">serial</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>就它们本身而言，这些消息只能携带很小的信息量。然而，<code>xdg_surface</code> 的每个子类 (<code>xdg_toplevel</code> 和 <code>xdg_popup</code>) 都有额外的事件，服务端可以在 &quot;configure&quot; 配置事件之前发送，以提出到目前为止所提到的各种建议。服务端将发送这些状态，如最大化、焦点、尺寸建议等，然后用 <code>serial</code> 来配置事件。当客户端的状态与这些建议一致的时候，它将嘎送一个带有相同序列的 <code>ack_configure</code> 请求来表明这一点。在下次提交到相关的 <code>wl_surface</code> 时，混成器将认为该状态是一致的。</p><h2 id="xdg-顶层窗口的生命周期" tabindex="-1">XDG 顶层窗口的生命周期 <a class="header-anchor" href="#xdg-顶层窗口的生命周期" aria-hidden="true">#</a></h2><p>我们第 7 章的示例代码虽然可以工作，但它不是桌面的最佳范式。它并没有假定混成器推荐的尺寸，而且如果用户试图关闭窗口，它也不会消失。若要响应这些由混成器提供的事件，这里涉及到两个 Wayland <code>事件：configure</code> 和 <code>close</code> 即配置和关闭。</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">configure</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">height</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">states</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">array</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">close</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><p>这里的宽度 <code>width</code> 和高度 <code>height</code> 是混成器为窗口推荐的首选尺寸<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，而状态 <code>states</code> 则是由以下数值构成的数组:</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">enum</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">state</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">maximized</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fullscreen</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">resizing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">activated</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tiled_left</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tiled_right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tiled_top</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tiled_bottom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">enum</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>关闭事件有时可以被忽略，一个典型的原因是向用户显示一个确认对话框，以保存他们还未保存的工作。我们可以很轻松地更新第 7 章中的示例代码，以支持这些事件。</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki material-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">diff --git a/client.c b/client.c</span></span>
<span class="line"><span style="color:#89DDFF;">---</span><span style="color:#A6ACCD;"> a/client.c</span></span>
<span class="line"><span style="color:#89DDFF;">+++</span><span style="color:#A6ACCD;"> b/client.c</span></span>
<span class="line"><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> -70,9 +70,10 </span><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> struct client_state {</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	struct xdg_surface *xdg_surface;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	struct xdg_toplevel *xdg_toplevel;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	/* State */</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">	bool closed;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	float offset;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	uint32_t last_frame;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	int width, height;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	bool closed;</span></span>
<span class="line"><span style="color:#A6ACCD;"> };</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> static void wl_buffer_release(void *data, struct wl_buffer *wl_buffer) {</span></span>
<span class="line"><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> -86,7 +87,7 </span><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> static const struct wl_buffer_listener wl_buffer_listener = {</span></span>
<span class="line"><span style="color:#A6ACCD;"> static struct wl_buffer *</span></span>
<span class="line"><span style="color:#A6ACCD;"> draw_frame(struct client_state *state)</span></span>
<span class="line"><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">	const int width = 640, height = 480;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	int width = state-&gt;width, height = state-&gt;height;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	int stride = width * 4;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	int size = stride * height;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> -124,6 +125,32 </span><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> draw_frame(struct client_state *state)</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	return buffer;</span></span>
<span class="line"><span style="color:#A6ACCD;"> }</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">static void</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">xdg_toplevel_configure(void *data,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">		struct xdg_toplevel *xdg_toplevel, int32_t width, int32_t height,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">		struct wl_array *states)</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	struct client_state *state = data;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	if (width == 0 || height == 0) {</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">		/* Compositor is deferring to us */</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">		return;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	}</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	state-&gt;width = width;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	state-&gt;height = height;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">static void</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">xdg_toplevel_close(void *data, struct xdg_toplevel *toplevel)</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	struct client_state *state = data;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	state-&gt;closed = true;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">static const struct xdg_toplevel_listener xdg_toplevel_listener = {</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	.configure = xdg_toplevel_configure,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	.close = xdg_toplevel_close,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">};</span></span>
<span class="line"><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;"> static void</span></span>
<span class="line"><span style="color:#A6ACCD;"> xdg_surface_configure(void *data,</span></span>
<span class="line"><span style="color:#A6ACCD;"> 		struct xdg_surface *xdg_surface, uint32_t serial)</span></span>
<span class="line"><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> -163,7 +190,7 </span><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> wl_surface_frame_done(void *data, struct wl_callback *cb, uint32_t time)</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	cb = wl_surface_frame(state-&gt;wl_surface);</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	wl_callback_add_listener(cb, &amp;wl_surface_frame_listener, state);</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">	/* Update scroll amount at 8 pixels per second */</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	/* Update scroll amount at 24 pixels per second */</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	if (state-&gt;last_frame != 0) {</span></span>
<span class="line"><span style="color:#A6ACCD;"> 		int elapsed = time - state-&gt;last_frame;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 		state-&gt;offset += elapsed / 1000.0 * 24;</span></span>
<span class="line"><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> -217,6 +244,8 </span><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> int</span></span>
<span class="line"><span style="color:#A6ACCD;"> main(int argc, char *argv[])</span></span>
<span class="line"><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	struct client_state state = { 0 };</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	state.width = 640;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	state.height = 480;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	state.wl_display = wl_display_connect(NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	state.wl_registry = wl_display_get_registry(state.wl_display);</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	wl_registry_add_listener(state.wl_registry, &amp;wl_registry_listener, &amp;state);</span></span>
<span class="line"><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> -227,6 +256,8 </span><span style="color:#89DDFF;">@@</span><span style="color:#A6ACCD;"> main(int argc, char *argv[])</span></span>
<span class="line"><span style="color:#A6ACCD;"> 			state.xdg_wm_base, state.wl_surface);</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	xdg_surface_add_listener(state.xdg_surface, &amp;xdg_surface_listener, &amp;state);</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	state.xdg_toplevel = xdg_surface_get_toplevel(state.xdg_surface);</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">	xdg_toplevel_add_listener(state.xdg_toplevel,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">			&amp;xdg_toplevel_listener, &amp;state);</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	xdg_toplevel_set_title(state.xdg_toplevel, &quot;Example client&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	wl_surface_commit(state.wl_surface);</span></span>
<span class="line"></span></code></pre></div><p>如果你再次编译并运行这个客户端，你会注意到它的行为表现得比之前更加完善了。</p><h2 id="请求改变状态" tabindex="-1">请求改变状态 <a class="header-anchor" href="#请求改变状态" aria-hidden="true">#</a></h2><p>客户端也可以向混成器请求将自己置入这些状态中（最大、最小化等等），或者对窗口的大小进行限制。</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">set_max_size</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">height</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">set_min_size</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">height</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">set_maximized</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">unset_maximized</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">set_fullscreen</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">output</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">interface</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wl_output</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">allow-null</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">unset_fullscreen</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">set_minimized</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><p>混成器通过发送一个相应的 <code>configure</code> 配置事件来表明它对这些请求的确认。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这考虑到了客户端 <code>set_window_geometry</code> 请求所发送的窗口的几何形状。建议的尺寸仅包括窗口几何形状所代表的空间（即外接矩形）。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>`,19),t=[o];function e(c,r,D,F,y,i){return a(),n("div",null,t)}const d=s(p,[["render",e]]);export{u as __pageData,d as default};
