import{_ as s,c as a,o as n,d as l}from"./app.5f5b8589.js";const _=JSON.parse('{"title":"指针","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本请求","slug":"基本请求","link":"#基本请求","children":[]},{"level":2,"title":"锚定","slug":"锚定","link":"#锚定","children":[]}],"relativePath":"10.XDG_shell_in_depth/4.Pointers.md","lastUpdated":1673863362000}'),o={name:"10.XDG_shell_in_depth/4.Pointers.md"},p=l(`<h1 id="指针" tabindex="-1">指针 <a class="header-anchor" href="#指针" aria-hidden="true">#</a></h1><p>当我们在前几页介绍弹出式窗口的时候，我们注意到创建弹出式窗口时你必须提供一个定位器对象。之所以我们告诉你不必担心这个问题，只需要使用默认值，是因为这是一个复杂的接口，在当时是无关紧要的。现在，我们将深入探讨这个复杂的接口。</p><p>当你打开一个弹窗时候，它是在一个窗口系统中显示的，该系统有些你客户端不知道的限制。例如，Wayland 客户端不知道它们在屏幕上显示的位置。因此，如果右键单机窗口，则客户端缺失了必要信息来进行决策，可能出现弹窗越过屏幕边缘的情况。定位器就是为了解决这些问题而设计的，它让客户端指定弹出式窗口移动方式或调整大小的某些约束条件，然后混成器在完全掌握全局的情况下，可以对如何使用作出最终决定。</p><h2 id="基本请求" tabindex="-1">基本请求 <a class="header-anchor" href="#基本请求" aria-hidden="true">#</a></h2><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">destroy</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">destructor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>当你完成的时候，这个请求会销毁定位器。你可以在创建弹出窗口后调用此功能。</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">set_size</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">height</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><code>set_size</code> 请求用于设置正在创建的弹出窗口的大小。</p><p>所有使用使用定位器的客户端都将会用到这两个请求。现在，让我们来看一个更有趣的请求。</p><h2 id="锚定" tabindex="-1">锚定 <a class="header-anchor" href="#锚定" aria-hidden="true">#</a></h2>`,10),e=[p];function t(r,c,D,F,y,i){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{_ as __pageData,h as default};
