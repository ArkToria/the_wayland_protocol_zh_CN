import{_ as n,c as l,o as t,a,b as e}from"./app.9965651d.js";const x=JSON.parse('{"title":"关于 libwayland 的实现","description":"","frontmatter":{},"headers":[],"relativePath":"3-libwayland/index.md","lastUpdated":1674200399000}'),d={name:"3-libwayland/index.md"},o=a("h1",{id:"关于-libwayland-的实现",tabindex:"-1"},[e("关于 libwayland 的实现 "),a("a",{class:"header-anchor",href:"#关于-libwayland-的实现","aria-hidden":"true"},"#")],-1),s=a("p",null,"我们在 1.3 节中介绍了 libwayland 这一最受欢迎的 Wayland 实现。本书的大部分内容适用于任何实现，但是接下来的两章将使你熟悉 libwayland。",-1),i=a("p",null,[e("Wayland 软件包包括用于 Wayland-Client 和 Wayland-Server 的 pkg-config 规范——请参阅构建系统的文档以获取有关它们的链接介绍。当然，大多数应用程序只会连接到其中一个。该库包含一些简单的原语（如链表）和 Wayland 的核心协议 ——"),a("code",null,"Wayland.xml"),e(" 的预编译版本。")],-1),r=a("p",null,"我们将从原语开始介绍。",-1),c=[o,s,i,r];function _(p,y,h,b,u,f){return t(),l("div",null,c)}const w=n(d,[["render",_]]);export{x as __pageData,w as default};
