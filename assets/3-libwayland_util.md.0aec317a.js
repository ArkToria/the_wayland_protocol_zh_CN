import{_ as a,c as l,o as t,d as e}from"./app.700cfe46.js";const h=JSON.parse('{"title":"Wayland-util 原语","description":"","frontmatter":{},"headers":[],"relativePath":"3-libwayland/util.md","lastUpdated":1674200399000}'),d={name:"3-libwayland/util.md"},i=e('<h1 id="wayland-util-原语" tabindex="-1">Wayland-util 原语 <a class="header-anchor" href="#wayland-util-原语" aria-hidden="true">#</a></h1><p><code>wayland-util.h</code> 是客户端和服务端共同使用的库，它定义了许多结构、实用函数和宏，建立了一些用于 Wayland 应用程序的原语。其中包括：</p><ul><li>生成用于 Wayland 协议消息结构化重组和解构的代码</li><li>链表 <code>wl_list</code> 的实现</li><li>数组 <code>wl_array</code> 的实现（装配到相应的 Wayland 原语）</li><li>用于 Wayland 标量（如定点小数）和 C 类型转化的实用程序</li><li>调试记录工具，收集来自 libwayland 内部传出的消息</li></ul><p>头文件包含了许多非常好的注解，您应该自己阅读该文件。在接下来的几页中我们将详细介绍如何运用这些原语。</p>',4),n=[i];function o(_,c,r,s,p,u){return t(),l("div",null,n)}const f=a(d,[["render",o]]);export{h as __pageData,f as default};
