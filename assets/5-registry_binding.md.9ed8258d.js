import{_ as s,c as n,o as a,d as l}from"./app.1dfb0975.js";const F=JSON.parse('{"title":"绑定到全局","description":"","frontmatter":{},"headers":[],"relativePath":"5-registry/binding.md","lastUpdated":1674200399000}'),p={name:"5-registry/binding.md"},o=l(`<h1 id="绑定到全局" tabindex="-1">绑定到全局 <a class="header-anchor" href="#绑定到全局" aria-hidden="true">#</a></h1><p>在创建一个注册表对象时，服务端将为服务端上每个可用的全局对象发起全局事件。然后你可以与你需要的全局对象进行绑定。</p><p>这个为已知对象分配 ID 的过程称为对象绑定。一旦客户端像这样绑定到注册表，服务器就会多次发起全局事件，以告知它支持哪些接口。每一个全局对象都有一个独一无二的名字，是一个无符号整数。接口字符串映射到协议中的接口名称：上面 XML 中的 <code>wl_display</code> 就是这样一个名称的例子。版本号也在这里定义——关于接口版本的更多信息，详见附录 C。</p><p>为了绑定任意这些接口，我们需要使用绑定请求，其工作原理类似于我们绑定到 <code>wl_registry</code> 的神奇过程。例如，考虑这个线协议交换：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">C-&gt;S    00000001 000C0001 00000002            .... .... ....</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">S-&gt;C    00000002 001C0000 00000001 00000007   .... .... .... ....</span></span>
<span class="line"><span style="color:#A6ACCD;">        776C5f73 686d0000 00000001            wl_s hm.. ....</span></span>
<span class="line"><span style="color:#A6ACCD;">        [...]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">C-&gt;S    00000002 00100000 00000001 00000003   .... .... .... ....</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>第一个消息与我们已经剖析过的消息相同。第二个消息是来自服务端的事件：对象 2 （客户端在第一个消息中分配了 <code>wl_registry</code>）操作码 0（全局），参数 1、<code>wl_shm</code> 和 1 分别是这个全局对象的名字、接口和版本。客户端通过调用对象ID 2（<code>wl_registry::bind</code>）的操作码 0 进行响应，并将对象 ID 3 分配给全局名称 1 ——即绑定到全局的 <code>wl_shm </code>。这个对象未来的事件和请求是由 <code>wl_shm</code> （shared memory support）协议定义的，你可以在 <code>wayland.xml</code> (<code>/usr/share/wayland/wayland.xml</code>) 中找到。</p><p>一旦你创建了这个对象，你就可以利用其接口来完成各种任务——在 <code>wl_shm</code> 的例子中，管理客户端和服务端之间的共享内存。本书剩下的大部分内容是用来解释这些全局对象的用法。</p><p>有了这些信息，我们就可以写出我们第一个有用的 Wayland 客户端：它可以简单地打印出服务端上所有可用的全局接口。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdint.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">wayland-client.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span></span>
<span class="line"><span style="color:#82AAFF;">registry_handle_global</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> wl_registry </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">registry</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">uint32_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">interface</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint32_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">version</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">interface: &#39;%s&#39;, version: %d, name: %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">			interface</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> version</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span></span>
<span class="line"><span style="color:#82AAFF;">registry_handle_global_remove</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> wl_registry </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">registry</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">uint32_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// This space deliberately left blank</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> wl_registry_listener</span></span>
<span class="line"><span style="color:#A6ACCD;">registry_listener </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	.global </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> registry_handle_global</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	.global_remove </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> registry_handle_global_remove</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">argc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">argv</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> wl_display </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">display </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">wl_display_connect</span><span style="color:#89DDFF;">(NULL);</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> wl_registry </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">registry </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">wl_display_get_registry</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">display</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">wl_registry_add_listener</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">registry</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">registry_listener</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">wl_display_roundtrip</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">display</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>请参考之前的章节来解释这个程序。我们连接到显示器（4.1 章），获得注册表（本章），然后给它添加一个监听器（3.4 章），最后打印这个混成器上可用的全局接口来处理全局事件。自己试试吧。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">globals</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-lwayland-client</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">globals.c</span></span>
<span class="line"></span></code></pre></div><p>执行程序后输出结果如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_shm&#39;, version: 1, name: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_drm&#39;, version: 2, name: 2</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_linux_dmabuf_v1&#39;, version: 3, name: 3</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>注意：本章是我们最后一次展示线程协议输出到十六进制，可能也是你最后一次在文中看到它们总体的情况。追踪你的 Wayland 客户端或服务端的一个更好的方法是，在运行你的程序之前，将环境中的 <code>WAYLAND_DEBUG</code> 变量设为 1。现在就用 <code>globals</code> 程序试试吧!</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">[4144282.115]  -&gt; wl_display@1.get_registry(new id wl_registry@2)</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.149]  -&gt; wl_display@1.sync(new id wl_callback@3)</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.551] wl_display@1.delete_id(3)</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.575] wl_registry@2.global(1, &quot;wl_shm&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_shm&#39;, version: 1, name: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.605] wl_registry@2.global(2, &quot;wl_drm&quot;, 2)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_drm&#39;, version: 2, name: 2</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.625] wl_registry@2.global(3, &quot;zwp_linux_dmabuf_v1&quot;, 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_linux_dmabuf_v1&#39;, version: 3, name: 3</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.644] wl_registry@2.global(4, &quot;wl_compositor&quot;, 4)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_compositor&#39;, version: 4, name: 4</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.661] wl_registry@2.global(5, &quot;wl_subcompositor&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_subcompositor&#39;, version: 1, name: 5</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.678] wl_registry@2.global(6, &quot;wl_data_device_manager&quot;, 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_data_device_manager&#39;, version: 3, name: 6</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.696] wl_registry@2.global(7, &quot;zwlr_gamma_control_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_gamma_control_manager_v1&#39;, version: 1, name: 7</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.719] wl_registry@2.global(8, &quot;zxdg_output_manager_v1&quot;, 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zxdg_output_manager_v1&#39;, version: 3, name: 8</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.738] wl_registry@2.global(9, &quot;org_kde_kwin_idle&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;org_kde_kwin_idle&#39;, version: 1, name: 9</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.759] wl_registry@2.global(10, &quot;zwp_idle_inhibit_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_idle_inhibit_manager_v1&#39;, version: 1, name: 10</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.775] wl_registry@2.global(11, &quot;zwlr_layer_shell_v1&quot;, 4)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_layer_shell_v1&#39;, version: 4, name: 11</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.793] wl_registry@2.global(12, &quot;xdg_wm_base&quot;, 2)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;xdg_wm_base&#39;, version: 2, name: 12</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.810] wl_registry@2.global(13, &quot;zwp_tablet_manager_v2&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_tablet_manager_v2&#39;, version: 1, name: 13</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.828] wl_registry@2.global(14, &quot;org_kde_kwin_server_decoration_manager&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;org_kde_kwin_server_decoration_manager&#39;, version: 1, name: 14</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.843] wl_registry@2.global(15, &quot;zxdg_decoration_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zxdg_decoration_manager_v1&#39;, version: 1, name: 15</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.872] wl_registry@2.global(16, &quot;zwp_relative_pointer_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_relative_pointer_manager_v1&#39;, version: 1, name: 16</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.890] wl_registry@2.global(17, &quot;zwp_pointer_constraints_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_pointer_constraints_v1&#39;, version: 1, name: 17</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.905] wl_registry@2.global(18, &quot;wp_presentation&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wp_presentation&#39;, version: 1, name: 18</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.924] wl_registry@2.global(19, &quot;zwlr_output_manager_v1&quot;, 2)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_output_manager_v1&#39;, version: 2, name: 19</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.942] wl_registry@2.global(20, &quot;zwlr_output_power_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_output_power_manager_v1&#39;, version: 1, name: 20</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.962] wl_registry@2.global(21, &quot;zwp_input_method_manager_v2&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_input_method_manager_v2&#39;, version: 1, name: 21</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.978] wl_registry@2.global(22, &quot;zwp_text_input_manager_v3&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_text_input_manager_v3&#39;, version: 1, name: 22</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144282.995] wl_registry@2.global(23, &quot;zwlr_foreign_toplevel_manager_v1&quot;, 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_foreign_toplevel_manager_v1&#39;, version: 3, name: 23</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.012] wl_registry@2.global(24, &quot;zwlr_export_dmabuf_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_export_dmabuf_manager_v1&#39;, version: 1, name: 24</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.029] wl_registry@2.global(25, &quot;zwlr_screencopy_manager_v1&quot;, 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_screencopy_manager_v1&#39;, version: 3, name: 25</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.044] wl_registry@2.global(26, &quot;zwlr_data_control_manager_v1&quot;, 2)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_data_control_manager_v1&#39;, version: 2, name: 26</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.060] wl_registry@2.global(27, &quot;zwp_primary_selection_device_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_primary_selection_device_manager_v1&#39;, version: 1, name: 27</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.078] wl_registry@2.global(28, &quot;wp_viewporter&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wp_viewporter&#39;, version: 1, name: 28</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.102] wl_registry@2.global(29, &quot;zxdg_exporter_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zxdg_exporter_v1&#39;, version: 1, name: 29</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.119] wl_registry@2.global(30, &quot;zxdg_importer_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zxdg_importer_v1&#39;, version: 1, name: 30</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.137] wl_registry@2.global(31, &quot;zxdg_exporter_v2&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zxdg_exporter_v2&#39;, version: 1, name: 31</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.161] wl_registry@2.global(32, &quot;zxdg_importer_v2&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zxdg_importer_v2&#39;, version: 1, name: 32</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.177] wl_registry@2.global(33, &quot;zwp_virtual_keyboard_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_virtual_keyboard_manager_v1&#39;, version: 1, name: 33</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.196] wl_registry@2.global(34, &quot;zwlr_virtual_pointer_manager_v1&quot;, 2)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_virtual_pointer_manager_v1&#39;, version: 2, name: 34</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.212] wl_registry@2.global(35, &quot;zwlr_input_inhibit_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwlr_input_inhibit_manager_v1&#39;, version: 1, name: 35</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.229] wl_registry@2.global(36, &quot;zwp_keyboard_shortcuts_inhibit_manager_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_keyboard_shortcuts_inhibit_manager_v1&#39;, version: 1, name: 36</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.250] wl_registry@2.global(37, &quot;wl_seat&quot;, 7)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_seat&#39;, version: 7, name: 37</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.274] wl_registry@2.global(38, &quot;zwp_pointer_gestures_v1&quot;, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;zwp_pointer_gestures_v1&#39;, version: 1, name: 38</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.296] wl_registry@2.global(39, &quot;wl_output&quot;, 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">interface: &#39;wl_output&#39;, version: 3, name: 39</span></span>
<span class="line"><span style="color:#A6ACCD;">[4144283.317] wl_callback@3.done(56994)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这里展示 <code>wayland.xml</code> 协议内的具体定义，可以参考其事件及参数配置如下，可以看到 <code>void *data</code> 和 <code>struct wl_registry *registry</code> 两个参数是固定的，其余参数由文件中的 <code>&lt;arg ... /&gt;</code> 定义。</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"> 146   │     </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">global</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 147   │       </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">description</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">summary</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">announce global object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 148   │     Notify the client of global objects.</span></span>
<span class="line"><span style="color:#A6ACCD;"> 149   │</span></span>
<span class="line"><span style="color:#A6ACCD;"> 150   │     The event notifies the client that a global object with</span></span>
<span class="line"><span style="color:#A6ACCD;"> 151   │     the given name is now available, and it implements the</span></span>
<span class="line"><span style="color:#A6ACCD;"> 152   │     given version of the given interface.</span></span>
<span class="line"><span style="color:#A6ACCD;"> 153   │       </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">description</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 154   │       </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">summary</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">numeric name of the global object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 155   │       </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">interface</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">summary</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">interface implemented by the object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 156   │       </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">summary</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">interface version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 157   │     </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 158   │</span></span>
<span class="line"><span style="color:#A6ACCD;"> 159   │     </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">global_remove</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 160   │       </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">description</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">summary</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">announce removal of global object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 161   │     Notify the client of removed global objects.</span></span>
<span class="line"><span style="color:#A6ACCD;"> 162   │</span></span>
<span class="line"><span style="color:#A6ACCD;"> 163   │     This event notifies the client that the global identified</span></span>
<span class="line"><span style="color:#A6ACCD;"> 164   │     by name is no longer available.  If the client bound to</span></span>
<span class="line"><span style="color:#A6ACCD;"> 165   │     the global using the bind request, the client should now</span></span>
<span class="line"><span style="color:#A6ACCD;"> 166   │     destroy that object.</span></span>
<span class="line"><span style="color:#A6ACCD;"> 167   │</span></span>
<span class="line"><span style="color:#A6ACCD;"> 168   │     The object remains valid and requests to the object will be</span></span>
<span class="line"><span style="color:#A6ACCD;"> 169   │     ignored until the client destroys it, to avoid races between</span></span>
<span class="line"><span style="color:#A6ACCD;"> 170   │     the global going away and a client sending a request to it.</span></span>
<span class="line"><span style="color:#A6ACCD;"> 171   │       </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">description</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 172   │       </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">summary</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">numeric name of the global object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 173   │     </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,17),e=[o];function t(r,c,i,y,D,C){return a(),n("div",null,e)}const _=s(p,[["render",t]]);export{F as __pageData,_ as default};
