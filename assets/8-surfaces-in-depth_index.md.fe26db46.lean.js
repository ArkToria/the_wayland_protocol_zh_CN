import{_ as t,c as s,o as r,a as e,b as a}from"./app.1dfb0975.js";const x=JSON.parse('{"title":"深入理解表面","description":"","frontmatter":{},"headers":[],"relativePath":"8-surfaces-in-depth/index.md","lastUpdated":1677168613000}'),n={name:"8-surfaces-in-depth/index.md"},c=e("h1",{id:"深入理解表面",tabindex:"-1"},[a("深入理解表面 "),e("a",{class:"header-anchor",href:"#深入理解表面","aria-hidden":"true"},"#")],-1),d=e("p",null,[a("到目前为止，我们所演示的 Surfaces 基本接口已经足以向用户展示数据，但 Surface 接口还提供了许多额外的请求和事件，以提高使用效率。对于大多数应用来说不需要每一帧都重新绘制整个表面。甚至决定何时绘制下一帧也最好在混成器的协助下完成。本章我们将深入讨论 "),e("code",null,"wl_surface"),a(" 的特性。")],-1),o=[c,d];function i(_,l,p,f,h,u){return r(),s("div",null,o)}const $=t(n,[["render",i]]);export{x as __pageData,$ as default};
